{"name": "test_add_client", "status": "failed", "statusDetails": {"message": "AssertionError: Row should not be null for client_id 311293142", "trace": "clients_page = <pages.advisor_clients_page.AdvisorClientsPage object at 0x0000028DFE2EBF40>\nnew_clients_page = <pages.new_client_page.NewClientPage object at 0x0000028DFE2E9450>\n\n    @allure.feature('Client Management')\n    @allure.story('Add Client')\n    @pytest.mark.usefixtures(\"login\")\n    def test_add_client(clients_page, new_clients_page):\n        \"\"\"\n        Test to add a new client and verify the client's data in the grid.\n        \"\"\"\n        with allure.step(\"Add a new client\"):\n            # Define client data\n            client_data = client_model.Client(\n                first_name='first', last_name='last', ssn_tin='123581220',\n                email=\"client@yahoo.com\", contactPhone='1235812200',\n                city='mycity', state='Alaska', repId='Maayan Tester1'\n            )\n    \n            # Add new client\n            clients_page.add_client_button()\n            client_id = new_clients_page.add_client(client_data)\n    \n            # Verify client was added\n            client_data.clientId = client_id\n            assert client_id, 'The ID of the created client should not be None'\n>           assert clients_page.verify_client_exists_at_grid(client_id), 'Client should exist in the grid'\n\ntest_advisor_client.py:69: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\advisor_clients_page.py:57: in verify_client_exists_at_grid\n    return self.get_row(client_id) is not None\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.advisor_clients_page.AdvisorClientsPage object at 0x0000028DFE2EBF40>\nclient_id = '311293142'\n\n    def get_row(self, client_id: str):\n        \"\"\"\n        Get the row in the clients table corresponding to the given client ID.\n    \n        :param client_id: The ID of the client whose row is to be retrieved.\n        :type client_id: str\n        :return: The web element representing the row for the client, or None if not found.\n        :rtype: Optional[WebElement]\n        \"\"\"\n        rows = self._get_all_rows()\n        row = next(\n            (single_row for single_row in rows if single_row.find_elements(By.TAG_NAME, \"td\")[0].text == client_id),\n            None)\n>       assert row, f'Row should not be null for client_id {client_id}'\nE       AssertionError: Row should not be null for client_id 311293142\n\n..\\pages\\advisor_clients_page.py:93: AssertionError"}, "description": "\n    Test to add a new client and verify the client's data in the grid.\n    ", "steps": [{"name": "Add a new client", "status": "failed", "statusDetails": {"message": "AssertionError: Row should not be null for client_id 311293142\n", "trace": "  File \"C:\\Users\\mayrav.a\\PycharmProjects\\AdvisorClient\\pythonProject\\tests\\test_advisor_client.py\", line 69, in test_add_client\n    assert clients_page.verify_client_exists_at_grid(client_id), 'Client should exist in the grid'\n  File \"C:\\Users\\mayrav.a\\PycharmProjects\\AdvisorClient\\pythonProject\\pages\\advisor_clients_page.py\", line 57, in verify_client_exists_at_grid\n    return self.get_row(client_id) is not None\n  File \"C:\\Users\\mayrav.a\\PycharmProjects\\AdvisorClient\\pythonProject\\pages\\advisor_clients_page.py\", line 93, in get_row\n    assert row, f'Row should not be null for client_id {client_id}'\n"}, "start": 1722970599003, "stop": 1722970603140}], "attachments": [{"name": "log", "source": "704ac28d-7c15-42bd-a89c-861f0eefde33-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "0a557e36-cbb2-46a0-a328-dc2a9df19356-attachment.txt", "type": "text/plain"}], "start": 1722970599003, "stop": 1722970603144, "uuid": "ef296e2c-43f7-49fb-81b9-a9cc02a4522a", "historyId": "34feeba1ee13802df9bc451f0a7f5296", "testCaseId": "34feeba1ee13802df9bc451f0a7f5296", "fullName": "tests.test_advisor_client#test_add_client", "labels": [{"name": "story", "value": "Add Client"}, {"name": "feature", "value": "Client Management"}, {"name": "tag", "value": "@pytest.mark.usefixtures('login')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_advisor_client"}, {"name": "host", "value": "DESKTOP-HHV1VH3"}, {"name": "thread", "value": "17776-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_advisor_client"}]}